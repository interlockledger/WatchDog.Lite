<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <Description>InterlockLedger.WatchDog is a Realtime Message, Event, HTTP (Request &amp; Response) and Exception logger and viewer for ASP.Net Core Web Apps and APIs. It allows developers log and view messages, events, http requests made to their web application and also exception caught during runtime in their web applications, all in Realtime. It leverages SignalR for real-time monitoring and LiteDb a Serverless MongoDB-like database with no configuration with the option of using your external MSSQL, MySQl or Postgres databases.</Description>
    <PackageProjectUrl>https://github.com/interlockledger/InterlockLedger.WatchDog</PackageProjectUrl>
    <PackageIcon>favicon.png</PackageIcon>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <RepositoryUrl>https://github.com/interlockledger/InterlockLedger.WatchDog</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageTags>Logger; Exception; Request; Response; LogViewer; WatchDog; Monitoring; Logging; HTTP;</PackageTags>
    <Authors>Rafael Teixeira, Israel Ulelu, Kelechi Onyekwere</Authors>
    <PackageId>InterlockLedger.WatchDog</PackageId>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <Version>3.0.2</Version>
    <PackageReleaseNotes>Update/remove dependencies</PackageReleaseNotes>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <NoWarn>1701;1702;MVC1004</NoWarn>
    <LangVersion>preview</LangVersion>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <NoWarn>1701;1702;MVC1004</NoWarn>
    <LangVersion>preview</LangVersion>
  </PropertyGroup>

  <ItemGroup>
    <None Remove=".\WatchPage\**" />
    <EmbeddedResource Include=".\WatchPage\**" />
  </ItemGroup>

  <ItemGroup>
    <None Include="..\favicon.png">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
      <Visible>False</Visible>
    </None>
    <None Include="..\README.md">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
      <Visible>False</Visible>
    </None>
  </ItemGroup>

  <ItemGroup>
    <FrameworkReference Include="Microsoft.AspNetCore.App" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="InterlockLedger.Commons" Version="3.0.1" />
    <PackageReference Include="LiteDB" Version="5.0.12" />
    <PackageReference Include="Microsoft.IO.RecyclableMemoryStream" Version="2.2.1" />
  </ItemGroup>

  <ItemGroup>
    <Using Include="Microsoft.AspNetCore.Builder" />
    <Using Include="Microsoft.AspNetCore.Http" />
    <Using Include="Microsoft.Extensions.DependencyInjection" />
    <Using Include="Microsoft.Extensions.FileProviders" />
    <Using Include="Microsoft.Extensions.Hosting" />
    <Using Include="Microsoft.Extensions.Logging" />
    <Using Include="Microsoft.IO" />
    <Using Include="System.Diagnostics" />
    <Using Include="System.Reflection" />
    <Using Include="System.Runtime.InteropServices" />
  </ItemGroup>

  <Target Name="TagSources">
    <Exec Command="git tag v$(Version)" ContinueOnError="true" StandardErrorImportance="low" StandardOutputImportance="low" IgnoreExitCode="true" />
    <Message Importance="high" Text="Recent tags:" />
    <Exec Command="git tag --sort=-creatordate | grep v | head -n 1" ContinueOnError="true" StandardErrorImportance="high" StandardOutputImportance="high" IgnoreExitCode="true" />
  </Target>

  <Target Name="PublishLocally" AfterTargets="Pack" Condition="Exists('$(INTERLOCK_LOCAL_NUGETS_FOLDER)')">
    <ItemGroup>
      <NugetPackages Include="$(PackageOutputAbsolutePath)\*.nupkg" />
    </ItemGroup>
    <Message Importance="high" Text="Publish to Local Nugets Folder '$(INTERLOCK_LOCAL_NUGETS_FOLDER)'" />
    <Copy DestinationFolder="$(INTERLOCK_LOCAL_NUGETS_FOLDER)" SourceFiles="@(NugetPackages)" ContinueOnError="true" SkipUnchangedFiles="false" />
  </Target>

  <Target Name="NugetOrg" Condition="'$(Configuration)'=='Release'" DependsOnTargets="Pack">
    <PropertyGroup>
      <NugetPackage>$(PackageOutputAbsolutePath)$(PackageId).$(Version).nupkg</NugetPackage>
    </PropertyGroup>
    <Message Importance="high" Text="Pushing $(NugetPackage)" Condition="Exists('$(NugetPackage)')" />
    <Exec Command="dotnet nuget push --skip-duplicate -s nuget.org $(NugetPackage)" ContinueOnError="true" StandardErrorImportance="high" StandardOutputImportance="high" IgnoreExitCode="true" Condition="Exists('$(NugetPackage)')" />
  </Target>



</Project>
